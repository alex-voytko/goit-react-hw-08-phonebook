{"version":3,"sources":["components/Container/Container.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/NavigationAuth/NavigationAuth.js","components/AppBar/AppBar.js","views/HomePage.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","views/RegisterPage.js","views/LoginPage.js","views/ContactsPage.js","App.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-selectors.js","redux/store.js","index.js"],"names":["Container","className","children","defaultProps","Navigation","to","exact","activeClassName","UserMenu","avatar","name","onLogout","style","src","alt","width","type","onClick","NavigationAuth","AppBar","isAuthenticated","HomePage","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","user","createReducer","email","token","error","combineReducers","axios","defaults","baseURL","register","credentials","dispatch","a","authActions","console","log","post","response","data","logIn","logOut","getCurrent","getState","RegisterPage","state","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","reset","this","onSubmit","autoComplete","onChange","Component","mapDispatchToProps","authOperations","connect","LoginPage","onLogin","ContactsPage","App","path","component","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","items","createSelector","contacts","filter","normalizedFilter","toLowerCase","contact","includes","_","action","payload","id","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0d46f0e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ className, children }) => (\r\n    <div className={className}>{children}</div>\r\n);\r\n\r\nContainer.defaultProps = {\r\n    children: null,\r\n};\r\n\r\nContainer.propTypes = {\r\n    className: PropTypes.string.isRequired,\r\n    children: PropTypes.any,\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = () => (\r\n    <>\r\n        <nav className=\"nav-container-1 \">\r\n            <NavLink\r\n                to=\"/\"\r\n                exact\r\n                className=\"link\"\r\n                activeClassName=\"active-link\"\r\n            >\r\n                Homepage\r\n            </NavLink>\r\n            <NavLink\r\n                to=\"/contacts\"\r\n                exact\r\n                className=\"link\"\r\n                activeClassName=\"active-link\"\r\n            >\r\n                Contacts\r\n            </NavLink>\r\n        </nav>\r\n    </>\r\n);\r\nexport default Navigation;\r\n","import React from 'react';\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n    <>\r\n        <div style=\"\">\r\n            <img src={avatar} alt=\"\" width=\"32\" style=\"\" />\r\n            <span style=\"\">Welcome, {name}</span>\r\n            <button type=\"button\" onClick={onLogout}>\r\n                Logout\r\n            </button>\r\n        </div>\r\n    </>\r\n);\r\n\r\nexport default UserMenu;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NavigationAuth = () => (\r\n    <>\r\n        <div className=\"nav-container-2\">\r\n            <NavLink\r\n                to=\"/login\"\r\n                exact\r\n                className=\"link\"\r\n                activeClassName=\"active-link\"\r\n            >\r\n                Log In\r\n            </NavLink>\r\n            <NavLink\r\n                to=\"/register\"\r\n                exact\r\n                className=\"link\"\r\n                activeClassName=\"active-link\"\r\n            >\r\n                Sign Up\r\n            </NavLink>\r\n        </div>\r\n    </>\r\n);\r\nexport default NavigationAuth;\r\n","import React from 'react';\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport NavigationAuth from '../NavigationAuth/NavigationAuth';\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n    <header>\r\n        <Navigation />\r\n        <h2 className=\"logo-title\">Phonebook</h2>\r\n        {isAuthenticated ? <UserMenu /> : <NavigationAuth />}\r\n    </header>\r\n);\r\n\r\nexport default AppBar;\r\n","import React from 'react';\r\n\r\nconst HomePage = () => (\r\n    <>\r\n        <div className=\"homepage-container\">\r\n            <h1 className=\"homepage-title\">\r\n                Welcome to my <span>Phonebook</span> app!\r\n            </h1>\r\n        </div>\r\n    </>\r\n);\r\n\r\nexport default HomePage;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {});\r\nconst token = createReducer(null, {});\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({ user, token, error });\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer  ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n    console.log();\r\n    try {\r\n        const response = await axios.post('/users/signup', credentials);\r\n        dispatch(authActions.registerSuccess(response.data));\r\n        console.log(response);\r\n    } catch (error) {\r\n        dispatch(authActions.registerError(error));\r\n        console.log(error);\r\n    }\r\n};\r\nconst logIn = credentials => dispatch => {};\r\nconst logOut = () => dispatch => {};\r\nconst getCurrent = () => (dispatch, getState) => {};\r\n\r\nexport default { register, logIn, logOut, getCurrent };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authOperations } from '../redux/auth';\r\n\r\nclass RegisterPage extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    };\r\n    handleChange = ({ target: { name, value } }) => {\r\n        this.setState({ [name]: value });\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onRegister(this.state);\r\n        this.reset();\r\n    };\r\n    reset() {\r\n        this.setState({ name: '', email: '', password: '' });\r\n    }\r\n    render() {\r\n        const { name, email, password } = this.state;\r\n        return (\r\n            <>\r\n                <div className=\"form-container\">\r\n                    <h1 className=\"form-title\">Sign Up Now!</h1>\r\n\r\n                    <form\r\n                        onSubmit={this.handleSubmit}\r\n                        autoComplete=\"off\"\r\n                        className=\"form-auth\"\r\n                    >\r\n                        <label className=\"form-label\">\r\n                            Name\r\n                            <input\r\n                                className=\"form-input\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={name}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </label>\r\n\r\n                        <label className=\"form-label\">\r\n                            E-Mail\r\n                            <input\r\n                                className=\"form-input\"\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </label>\r\n\r\n                        <label className=\"form-label\">\r\n                            Password\r\n                            <input\r\n                                className=\"form-input\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </label>\r\n\r\n                        <button type=\"submit\" className=\"form-button\">\r\n                            Sign Up\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onRegister: authOperations.register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterPage);\r\n","import React, { Component } from 'react';\r\n\r\nclass LoginPage extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n    };\r\n    handleChange = ({ target: { name, value } }) => {\r\n        this.setState({ [name]: value });\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        this.props.onLogin(this.state);\r\n        this.reset();\r\n    };\r\n    reset() {\r\n        this.setState({ email: '', password: '' });\r\n    }\r\n    render() {\r\n        const { email, password } = this.state;\r\n        return (\r\n            <>\r\n                <div className=\"form-container\">\r\n                    <h1 className=\"form-title\">Log In</h1>\r\n\r\n                    <form\r\n                        onSubmit={this.handleSubmit}\r\n                        autoComplete=\"off\"\r\n                        className=\"form-auth\"\r\n                    >\r\n                        <label className=\"form-label\">\r\n                            E-Mail\r\n                            <input\r\n                                className=\"form-input\"\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </label>\r\n\r\n                        <label className=\"form-label\">\r\n                            Password\r\n                            <input\r\n                                className=\"form-input\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </label>\r\n\r\n                        <button type=\"submit\" className=\"form-button\">\r\n                            Enter\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\n\r\nconst ContactsPage = () => (\r\n    <>\r\n        <div className=\"contacts-container\"></div>\r\n    </>\r\n);\r\nexport default ContactsPage;\r\n","import React, { Component } from 'react';\nimport Container from './components/Container';\nimport AppBar from './components/AppBar';\nimport HomePage from './views/HomePage';\nimport RegisterPage from './views/RegisterPage';\nimport LoginPage from './views/LoginPage';\nimport ContactsPage from './views/ContactsPage';\nimport { Switch, Route } from 'react-router-dom';\nimport './styles/main.scss';\n\nclass App extends Component {\n    render() {\n        return (\n            <>\n                <Container className=\"container-general\">\n                    <AppBar />\n                    <Container className=\"container\">\n                        <Switch>\n                            <Route exact path=\"/\" component={HomePage} />\n                            <Route path=\"/register\" component={RegisterPage} />\n                            <Route path=\"/login\" component={LoginPage} />\n                            <Route path=\"/contacts\" component={ContactsPage} />\n                        </Switch>\n                    </Container>\n                </Container>\n            </>\n        );\n    }\n}\n\nexport default App;\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n//fetch Contacts\r\nexport const fetchContactsRequest = createAction(\r\n    'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n    'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction(\r\n    'contacts/fetchContactsError',\r\n);\r\n\r\n//add Contacts\r\nexport const addContactRequest = createAction(\r\n    'contacts/addContactRequest',\r\n);\r\nexport const addContactSuccess = createAction(\r\n    'contacts/addContactSuccess',\r\n);\r\nexport const addContactError = createAction(\r\n    'contacts/addContactError',\r\n);\r\n\r\n//remove Contacts\r\nexport const removeContactRequest = createAction(\r\n    'contacts/removeContactRequest',\r\n);\r\nexport const removeContactSuccess = createAction(\r\n    'contacts/removeContactSuccess',\r\n);\r\nexport const removeContactError = createAction(\r\n    'contacts/removeContactError',\r\n);\r\n\r\n//change Filter\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\n// const addContact = ({ name, number, id }) => ({\r\n//     type: types.ADD,\r\n//     payload: { name, number, id },\r\n// });\r\n// const removeContact = contactId => ({\r\n//     type: types.REMOVE,\r\n//     payload: contactId,\r\n// });\r\n// const changeFilter = value => ({\r\n//     type: types.CHANGE_FILTER,\r\n//     payload: value,\r\n// });\r\n","import axios from 'axios';\r\nimport {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    removeContactRequest,\r\n    removeContactSuccess,\r\n    removeContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3050';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n\r\n    axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n        .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst addContact = contact => dispatch => {\r\n    dispatch(addContactRequest());\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst removeContact = contactId => dispatch => {\r\n    dispatch(removeContactRequest());\r\n    axios\r\n        .delete(`/contacts/${contactId}`)\r\n        .then(() => dispatch(removeContactSuccess(contactId)))\r\n        .catch(error => dispatch(removeContactError(error)));\r\n};\r\n\r\nexport default { fetchContacts, addContact, removeContact };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    removeContactRequest,\r\n    removeContactSuccess,\r\n    removeContactError,\r\n    changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactsSuccess]: (_, action) => action.payload,\r\n    [addContactSuccess]: (state, action) => [\r\n        ...state,\r\n        action.payload,\r\n    ],\r\n    [removeContactSuccess]: (state, action) =>\r\n        state.filter(contact => contact.id !== action.payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactsRequest]: () => true,\r\n    [fetchContactsSuccess]: () => false,\r\n    [fetchContactsError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [removeContactRequest]: () => true,\r\n    [removeContactSuccess]: () => false,\r\n    [removeContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n});\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//     switch (type) {\r\n//         case types.ADD:\r\n//             return [...state, payload];\r\n\r\n//         case types.REMOVE:\r\n//             return state.filter(contact => contact.id !== payload);\r\n\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n// const filter = (state = '', { type, payload }) => {\r\n//     switch (type) {\r\n//         case types.CHANGE_FILTER:\r\n//             return payload;\r\n\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n    [getAllContacts, getFilter],\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n    },\r\n);\r\n","import { contactsReducer } from './contacts';\r\nimport {\r\n    configureStore,\r\n    getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [\r\n                FLUSH,\r\n                REHYDRATE,\r\n                PAUSE,\r\n                PERSIST,\r\n                PURGE,\r\n                REGISTER,\r\n            ],\r\n        },\r\n    }),\r\n];\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = store;\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}